""" Map leader key to space
let mapleader =" "

""" Plugins  --------------------------------
" cs"' => change surround from " to '
" cst" => change surround tab to "
" ds" => remove surround "
" ys$" => surround to end of line
" in visual mode, start with S and then type the surround char
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set which-key
set ideamarks
"set sneak
set ReplaceWithRegister
set NERDTree
"set highlightedyank
"
" " text-object
" set vim-paragraph-motion
" set textobj-indent
" set textobj-entire
" set argtextobj

"Plug 'vim-textobj-entire'
set exchange

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" multiple-cusors
<C-n>, next
<C-x>, skip
<C-p>, previous
" g<C-n>
"
"
let g:NERDTreeMapJumpParent='h'


let g:WhichKey_ShowVimActions = "true"


""" Common settings -------------------------
set showmode
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5
" Do incremental searching.
set hlsearch
set incsearch
set ignorecase
set notimeout
set nu "show current line number
set relativenumber
set smartcase

" Don't use Ex mode, use Q for formatting.
map Q gq

""" Idea specific settings ------------------
set ideajoin
set idearefactormode=keep

imap jj <Esc>


""" Mappings --------------------------------

" Move visual block
vnoremap J :m'>+<CR>gv=gv
vnoremap K :m-2<CR>gv=gv
" Shortcut for copying to/from System Clipboard
vmap YY "+y
vmap DD "+d
nmap <Leader>p "+P

map <leader>fs <Action>(SaveAll)<CR>
map <leader>ff <Action>(GotoFile)<CR>
nmap <Leader>fg :action SearchEverywhere<CR>
map <leader>fu <Action>(FindUsages)
map <leader>fs <Action>(FileStructurePopup)


" map <leader>c <Action>(CommentByLineComment)
" map <leader>C <Action>(CommentByBlockComment)
map <leader>cpr <Action>(CopyReference)<CR>
map <leader>cpp <Action>(CopyPaths)


""" Windows
map <C-k> <C-w>k
map <C-j> <C-w>j
map <C-h> <C-w>h
map <C-l> <C-w>l
map <leader>wv <Action>(SplitVertically)<CR>
map <leader>wg <Action>(SplitHorizontally)<CR>
map <leader>wd <Action>(UnsplitAll)<CR>
" map <leader>ww <Action>(HideAllWindows)
" nmap <leader>wk <Action>(StretchSplitToTop)
" nmap <leader>wj <Action>(StretchSplitToBottom)
nmap <leader>wh <Action>(StretchSplitToLeft)
nmap <leader>wl <Action>(StretchSplitToRight)
map <leader>wm <Action>(MaximizeEditorInSplit)
map <leader>wu <Action>(UnsplitAll)

" " editor
map <leader>bb <Action>(RecentFiles)<CR>
map <leader>bd <Action>(CloseContent)<CR>
map <leader>bD <Action>(CloseAllEditors)<CR>
map <leader>bH <Action>(CloseAllToTheLeft)<CR>
map <leader>bL <Action>(CloseAllToTheRight)<CR>
map <leader>bo <Action>(CloseAllEditorsButActive)<CR>
map <leader>bp <Action>(PinActiveEditorTab)
map <leader>bP <Action>(CloseAllUnpinnedEditors)
map <leader>bro <Action>(ReopenClosedTab)<CR>
" map <leader>bp <Action>(ToggleLineBreakpoint)
" map <leader>be <Action>(EditBreakpoint)
" map <leader>bv <Action>(ViewBreakpoints)
" " build
" map <leader>bb <Action>(BuildMenu)
map <leader>bt <Action>(ToggleLineBreakpoint)
"nmap <leader>bb <Action>(ToggleBookmark)


" " []
nmap [g <Action>(GotoPreviousError)
nmap ]g <Action>(GotoNextError)
" nmap [b <Action>(PreviousTab)
" nmap ]b <Action>(NextTab)
" nmap [u <Action>(GotoPrevElementUnderCaretUsage)
" nmap ]u <Action>(GotoNextElementUnderCaretUsage)
nmap [o <Action>(PreviousOccurence)
nmap ]o <Action>(NextOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(JumpToLastChange)
nmap ]c <Action>(JumpToNextChange)
" nmap ]q <Action>(GotoNextError)
" nmap [q <Action>(GotoPreviousError)
nmap ]b <Action>(GotoNextBookmark)
nmap [b <Action>(GotoPreviousBookmark)


" " goto
" map <leader>a <Action>(GotoAction)
map gr <Action>(FindUsages)<CR>
map gu <Action>(GotoSuperMethod)<CR>
map ga <Action>(GotoAction)
" map gc <Action>(GotoClass)
" map gf <Action>(GotoFile)
" map gs <Action>(GotoSymbol)
" map gt <Action>(TextSearchAction)
" map go <Action>(GotoSuperMethod)
" map gd <Action>(GotoDeclaration)
" map gD <Action>(GotoTypeDeclaration)
map gi <Action>(GotoImplementation)
map gI <Action>(QuickImplementations)

"
map <leader>rr <Action>(RenameElement)
map <leader>ic <Action>(IntroduceConstant)
map <leader>if <Action>(IntroduceField)
map <leader>ip <Action>(IntroduceParameter)
map <leader>iv <Action>(IntroduceVariable)
"map <leader>i <Action>(IntroduceParameterObject)
"map <leader>ifp <Action>(IntroduceFunctionalParameter)

""" easymotion
" nmap s <Plug>(easymotion-s)
" nmap f <Plug>(easymotion-fl)
" nmap F <Plug>(easymotion-Fl)
" nmap t <Plug>(easymotion-tl)
" nmap T <Plug>(easymotion-Tl)
nmap <leader><leader>j <Plug>(easymotion-j)
nmap <leader><leader>k <Plug>(easymotion-k)

"map <leader>s <Plug>(sneak-s)
"map <leader>ls <Plug>(easymotion-sl)

map <leader>ss <Action>(FileStructurePopup)


" block slection
vmap n <action>(EditorSelectWord)
vmap N <action>(EditorUnSelectWord)

" " menu
map <leader>mt <Action>(MainMenu)
map <leader>mm <Action>(EditorTabPopupMenu)
map <leader>ma <Action>(AnalyzeMenu)
map <leader>mb <Action>(BuildMenu)
map <leader>mc <Action>(CodeMenu)
map <leader>mf <Action>(FindMenuGroup)
map <leader>mg <Action>(GoToMenu)
map <leader>ms <Action>(ScopeViewPopupMenu)
map <leader>mw <Action>(ToolWindowsGroup)
"
" " run
map <leader>rc <Action>(ContextRun)
map <leader>rf <Action>(ChooseRunConfiguration)
" map <leader>rt <Action>(Rerun)
" map <leader>rr <Action>(RunTests)

" map <leader>rs <Action>(Stop)
"
" " debug
" map <leader>dc <Action>(ContextDebug)
" map <leader>dr <Action>(Debug)
"

"
" " tab
" map <S-Tab> <Action>(PreviousTab)
" map <Tab> <Action>(NextTab)
"
" map <leader>1 <Action>(GoToTab1)
" map <leader>2 <Action>(GoToTab2)
" map <leader>3 <Action>(GoToTab3)
" map <leader>4 <Action>(GoToTab4)
" map <leader>5 <Action>(GoToTab5)
" map <leader>6 <Action>(GoToTab6)
" map <leader>7 <Action>(GoToTab7)
" map <leader>8 <Action>(GoToTab8)
" map <leader>9 <Action>(GoToTab9)
"
" " window
" map <leader>sh <Action>(MoveTabLeft)
" map <leader>sj <Action>(MoveTabDown)
" map <leader>sk <Action>(MoveTabUp)
" map <leader>sl <Action>(MoveTabRight)
" map <leader>sH <Action>(SplitHorizontally)
" map <leader>sV <Action>(SplitVertically)
"
" map <M-i> <Action>(PrevSplitter)
" map <M-o> <Action>(NextSplitter)
"
"
"
" " refactor
" map <leader>rn <Action>(RenameElement)
map <leader>re <Action>(Refactorings.QuickListPopupAction)
map <leader>uw <Action>(Unwrap)
map <leader>sw <Action>(SurroundWith)
" map <leader>sd <Action>(SafeDelete)
map <leader>oi <Action>(OptimizeImports)
"
" " file
" map <leader>of <Action>(OpenFile)
map <leader>yp <Action>(CopyPathFromRepositoryRootProvider)
" map <leader>rf <Action>(RecentFiles)
" map <leader>rl <Action>(RecentLocations)
" map <leader>rp <Action>(ManageRecentProjects)
" map <leader>sh <Action>(LocalHistory.ShowHistory)
" map <leader>sf <Action>(ShowFilePath)
map <leader>si <Action>(SelectIn)
" nmap \\fp <Action>(FindInPath)
" nmap \\rp <Action>(ReplaceInPath)
" map \\sw <Action>($SearchWeb)
"
" " tag
map <leader>su <Action>(ShowUsages)
map <leader>hl <Action>(HighlightUsagesInFile)
map <leader>qp <Action>(QuickPreview)
map <leader>qd <Action>(QuickDefinition)
" map <leader>qD <Action>(QuickTypeDefinition)
"
" " code
" map <leader>qf <Action>(ShowIntentionActions)
" map <leader>g <Action>(ShowErrorDescription)
" map <leader>om <Action>(OverrideMethods)
" map <leader>im <Action>(ImplementMethods)
" nmap \\o <Action>(SelectAllOccurrences)
" nmap \\g <Action>(Generate)
" nmap \\fc <Action>(ReformatCode)
" nmap \\ic <Action>(InspectCode)
" nmap \\t <Action>(GoToTest)
"
" " zen
" map <leader>z <Action>(ToggleZenMode)
"
"
"
" " terminal
" map <leader>tt <Action>(ActivateTerminalToolWindow)
" map <leader>tc <Action>(Terminal.OpenInTerminal)
"
" " bookmark
nmap mm <Action>(ToggleBookmark)
nmap ms <Action>(ShowBookmarks)
"
" " todo
" map <leader>to <Action>(ActivateTODOToolWindow)
"
" " task
" map <leader>ts <Action>(tasks.goto)
"
" " idea join
" map \\jl <Action>(EditorJoinLines)
"
" " hierarchy
nmap \\hc <Action>(CallHierarchy)
nmap \\hm <Action>(MethodHierarchy)
nmap \\ht <Action>(TypeHierarchy)
"
" " vim  actions
" map \\v <Action>(VimActions)
"
" " translation (idea plugin)
" nmap \\tt <Action>($ShowTranslationDialogAction)
" nmap \\ts <Action>($TranslateTextComponent)
" nmap \\ti <Action>($InclusiveTranslateAction)
" nmap \\te <Action>($ExclusiveTranslateAction)
"
" " string manipulate (idea plugin)
" map \\ss <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)
"
" " github gist
" map \\cg <Action>(Github.Create.Gist)


"
" " better HJKL
" map H ^
" map L $
" map J }
" map K {
"
" " location
" map <C-i> <Action>(Back)
" map <C-o> <Action>(Forward)
"
" " collapse
" map zz <Action>(ExpandCollapseToggleAction)
" map za <Action>(CollapseAllRegions)
" map zA <Action>(ExpandAllRegions)
"
" " vcs
" map <leader>v <Action>(VcsGroups)
"
" " alias
map U <C-r>
" map <C-a> ggVG"+y
"
"
