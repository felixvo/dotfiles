""" Map leader key to space
let mapleader =" "

""" Plugins  --------------------------------
" cs"' => change surround from " to '
" cst" => change surround tab to "
" ds" => remove surround "
" ys$" => surround to end of line
" in visual mode, start with S and then type the surround char
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
"set sneak
set ReplaceWithRegister
set NERDTree
"set highlightedyank

"Plug 'vim-textobj-entire'
Plug 'tommcdo/vim-exchange'

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" multiple-cusors
<C-n>, next
<C-x>, skip
<C-p>, previous
" g<C-n>
"
"
let g:NERDTreeMapJumpParent='h'


""" Common settings -------------------------
set showmode
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5
" Do incremental searching.
"set incsearch
set nu "show current line number
set relativenumber
set smartcase

" Don't use Ex mode, use Q for formatting.
map Q gq

""" Idea specific settings ------------------
set ideajoin
set idearefactormode=keep


""" Mappings --------------------------------
map <leader>fs <Action>(SaveAll)<CR>
map <leader>ff <Action>(GotoFile)<CR>
map <leader>fr <Action>(RecentFiles)<CR>

map <leader>cpr <Action>(CopyReference)<CR>

map <leader>wd <Action>(UnsplitAll)<CR>
map <leader>bD <Action>(CloseAllEditors)<CR>
map <leader>bro <Action>(ReopenClosedTab)<CR>

map gr <Action>(FindUsages)<CR>
map gi <Action>(GotoImplementation)<CR>
map gu <Action>(GotoSuperMethod)<CR>


"
map <leader>rr <Action>(RenameElement)
map <leader>ic <Action>(IntroduceConstant)
map <leader>if <Action>(IntroduceField)
map <leader>ip <Action>(IntroduceParameter)
map <leader>iv <Action>(IntroduceVariable)
"map <leader>i <Action>(IntroduceParameterObject)
"map <leader>ifp <Action>(IntroduceFunctionalParameter)

"""
map s <Plug>(easymotion-s)
map f <Plug>(easymotion-f)
map F <Plug>(easymotion-F)
map t <Plug>(easymotion-t)
map T <Plug>(easymotion-T)

"map <leader>s <Plug>(sneak-s)
"map <leader>ls <Plug>(easymotion-sl)


""" Windows
map <leader>wv <Action>(SplitVertically)<CR>
map <leader>wg <Action>(SplitHorizontally)<CR>

